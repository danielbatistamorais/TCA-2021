"use strict";
/*
 * @adonisjs/assembler
 *
 * (c) Harminder Virk <virk@adonisjs.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.EnvParser = void 0;
const path_1 = require("path");
const fs_extra_1 = require("fs-extra");
const env_1 = require("@adonisjs/env");
/**
 * Parses the env file inside the project root.
 */
class EnvParser {
    constructor() {
        this.envContents = {};
        this.parser = new env_1.EnvParser(false);
    }
    /**
     * Parse .env file contents
     */
    async parse(rootDir) {
        try {
            this.envContents = this.parser.parse(await fs_extra_1.readFile(path_1.join(rootDir, '.env'), 'utf-8'));
        }
        catch { }
    }
    /**
     * Returns value for a key inside the `.env` file
     */
    get(key) {
        return this.envContents[key];
    }
    /**
     * Returns an env object for the keys that has defined values
     */
    asEnvObject(keys) {
        return keys.reduce((result, key) => {
            const value = this.get(key);
            if (value !== undefined) {
                result[key] = value;
            }
            return result;
        }, {});
    }
}
exports.EnvParser = EnvParser;
