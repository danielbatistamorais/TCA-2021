"use strict";
/*
* @adonisjs/ioc-transformer
*
* (c) Harminder Virk <virk@adonisjs.com>
*
* For the full copyright and license information, please view the LICENSE
* file that was distributed with this source code.
*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.iocTransformer = void 0;
/**
 * Converts Ioc container import statements to `use` statements
 * in compiled Javascript code.
 */
function iocTransformer(ts, rcFile) {
    const aliases = Object.keys(rcFile.aliases || {});
    return (ctx) => {
        return (sourceFile) => {
            function visitor(node) {
                if (ts.isCallExpression(node)
                    && node.expression
                    && ts.isIdentifier(node.expression)
                    && node.expression.escapedText === 'require') {
                    const moduleName = node.arguments[0].text;
                    if (moduleName && moduleName.startsWith('@ioc:')) {
                        return ts.factory.createCallExpression(ts.factory.createIdentifier('global[Symbol.for(\'ioc.use\')]'), undefined, [ts.factory.createStringLiteral(moduleName.substr(5))]);
                    }
                    if (moduleName && aliases.find((alias) => moduleName.startsWith(`${alias}/`))) {
                        return ts.factory.createCallExpression(ts.factory.createIdentifier('global[Symbol.for(\'ioc.use\')]'), undefined, [ts.factory.createStringLiteral(moduleName)]);
                    }
                }
                return ts.visitEachChild(node, visitor, ctx);
            }
            return ts.visitEachChild(sourceFile, visitor, ctx);
        };
    };
}
exports.iocTransformer = iocTransformer;
